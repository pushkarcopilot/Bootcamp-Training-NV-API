// <auto-generated />
using System;
using Bootcamp.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bootcamp.Data.Migrations
{
    [DbContext(typeof(EngagementDbContext))]
    [Migration("20240909071919_Init_DB")]
    partial class Init_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bootcamp.Data.Models.AuditType", b =>
                {
                    b.Property<int>("AuditTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditTypeId");

                    b.ToTable("AuditType");

                    b.HasData(
                        new
                        {
                            AuditTypeId = 0,
                            Name = "InternalAudit"
                        },
                        new
                        {
                            AuditTypeId = 1,
                            Name = "ExternalAudit"
                        },
                        new
                        {
                            AuditTypeId = 2,
                            Name = "IRSTaxAudit"
                        },
                        new
                        {
                            AuditTypeId = 3,
                            Name = "FinancialAudit"
                        });
                });

            modelBuilder.Entity("Bootcamp.Data.Models.Engagement", b =>
                {
                    b.Property<int>("EngagementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EngagementId"));

                    b.Property<DateTimeOffset>("AuditEndDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("AuditStartDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("AuditTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Auditors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("EngagementStatusId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("EngagementId");

                    b.HasIndex("AuditTypeId");

                    b.HasIndex("EngagementStatusId");

                    b.ToTable("Engagements");
                });

            modelBuilder.Entity("Bootcamp.Data.Models.EngagementStatus", b =>
                {
                    b.Property<int>("EngagementStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EngagementStatusId");

                    b.ToTable("EngagementStatus");

                    b.HasData(
                        new
                        {
                            EngagementStatusId = 0,
                            Name = "NotStarted"
                        },
                        new
                        {
                            EngagementStatusId = 1,
                            Name = "Assigned"
                        },
                        new
                        {
                            EngagementStatusId = 2,
                            Name = "InProgress"
                        },
                        new
                        {
                            EngagementStatusId = 3,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("Bootcamp.Data.Models.Engagement", b =>
                {
                    b.HasOne("Bootcamp.Data.Models.AuditType", "AuditType")
                        .WithMany("Engagements")
                        .HasForeignKey("AuditTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp.Data.Models.EngagementStatus", "EngagementStatus")
                        .WithMany("Engagements")
                        .HasForeignKey("EngagementStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditType");

                    b.Navigation("EngagementStatus");
                });

            modelBuilder.Entity("Bootcamp.Data.Models.AuditType", b =>
                {
                    b.Navigation("Engagements");
                });

            modelBuilder.Entity("Bootcamp.Data.Models.EngagementStatus", b =>
                {
                    b.Navigation("Engagements");
                });
#pragma warning restore 612, 618
        }
    }
}
